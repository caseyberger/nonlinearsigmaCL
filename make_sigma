SHELL=/bin/sh
# Brief notes on makefiles:  Comments start with #.  $(COMMAND) means 
#  replace with the value of COMMAND assigned with an "=". 

# This file contains a set of rules used by the "make" command.
# To make the program, use the command:
#        "make -f make_sigma"
#
# To remove the OBJS files, use the command:
#        "make -f make_sigma clean"
#
 
# The name of this makefile goes here
MAKEFILE= make_sigma

# The command you type to run the program (executable name)
COMMAND =  nonlinearsigma

# special definitions for testing, etc

USE_TEST_PRINT_STATEMENTS ?= TRUE
USE_EXTREME_TEST_PRINT_STATEMENTS ?= FALSE
USE_CONST_RN ?= FALSE

ifeq ($(USE_TEST_PRINT_STATEMENTS), TRUE)
	DEFINES += -DTESTING_MODE
endif

ifeq ($(USE_EXTREME_TEST_PRINT_STATEMENTS), TRUE)
	DEFINES += -DEXTREME_TESTING_MODE
endif

ifeq ($(USE_CONST_RN),TRUE)
	DEFINES += -DTEST_CONSTANT_RN
endif

CXX = g++

CXXFLAGS += $(DEFINES)

TARGET = nonlinearsigma

# ****************************************************
# Targets needed to bring the executable up to date

nonlinearsigma: nonlinearsigma.o lattice.o action_suite.o test_suite.o
	$(CXX) $(CXXFLAGS) -o nonlinearsigma nonlinearsigma.o lattice.o action_suite.o test_suite.o

nonlinearsigma.o: nonlinearsigma.cpp lattice.h action_suite.h test_suite.h
	$(CXX) $(CXXFLAGS) -c nonlinearsigma.cpp 

# Dependencies
lattice.o: lattice.cpp lattice.h 
	$(CXX) $(CXXFLAGS) -c lattice.cpp
    
action_suite.o: action_suite.cpp action_suite.h
	$(CXX) $(CXXFLAGS) -c action_suite.cpp
    
test_suite.o: test_suite.cpp test_suite.h
	$(CXX) $(CXXFLAGS) -c test_suite.cpp 
 
##########################################################################
# Additional tasks 
##########################################################################
 
clean:
	rm *.o
  
##########################################################################
# End of makefile 
##########################################################################
